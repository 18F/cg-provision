{
  "AWSTemplateFormatVersion" : "2010-09-09",

  "Parameters" : {
    "DescriptionTag": {
      "Type": "String",
      "Description" : "VPC Tag Name",
      "Default": "tooling",
      "MinLength": "1",
      "MaxLength": "255",
      "AllowedPattern" : "[\\x20-\\x7E]*",
      "ConstraintDescription": "can contain only ASCII characters."
    },

    "KeyName": {
      "Type": "AWS::EC2::KeyPair::KeyName",
      "Description" : "Name of an existing EC2 KeyPair to enable SSH access to the instances",
      "Default": "bosh"
    },

    "VPCNetworkCidr": {
      "Type": "String",
      "Description": "Network CIDR block for this VPC",
      "Default": "10.99.0.0/16",
      "AllowedPattern": "(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/([0-9]|[1-2][0-9]|3[0-2]))",
      "ConstraintDescription": "can contain only valid CIDR notation (x.x.x.x/yy)"
    },

    "Zone1PublicNetworkCidr": {
      "Type": "String",
      "Description": "Network CIDR block for this public subnet",
      "Default": "10.99.100.0/24",
      "AllowedPattern": "(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/([0-9]|[1-2][0-9]|3[0-2]))",
      "ConstraintDescription": "can contain only valid CIDR notation (x.x.x.x/yy)"
    },

    "Zone2PublicNetworkCidr": {
      "Type": "String",
      "Description": "Network CIDR block for this public subnet",
      "Default": "10.99.101.0/24",
      "AllowedPattern": "(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/([0-9]|[1-2][0-9]|3[0-2]))",
      "ConstraintDescription": "can contain only valid CIDR notation (x.x.x.x/yy)"
    },

    "Zone1PrivateNetworkCidr": {
      "Type": "String",
      "Description": "Network CIDR block for this private subnet",
      "Default": "10.99.1.0/24",
      "AllowedPattern": "(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/([0-9]|[1-2][0-9]|3[0-2]))",
      "ConstraintDescription": "can contain only valid CIDR notation (x.x.x.x/yy)"
    },

    "Zone2PrivateNetworkCidr": {
      "Type": "String",
      "Description": "Network CIDR block for this private subnet",
      "Default": "10.99.2.0/24",
      "AllowedPattern": "(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/([0-9]|[1-2][0-9]|3[0-2]))",
      "ConstraintDescription": "can contain only valid CIDR notation (x.x.x.x/yy)"
    },

    "RDSSubnetCidrA" : {
      "Type": "String",
      "Description": "Network CIDR block for first RDS subnet",
      "Default": "10.99.20.0/24",
      "AllowedPattern": "(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/([0-9]|[1-2][0-9]|3[0-2]))",
      "ConstraintDescription": "can contain only valid CIDR notation (x.x.x.x/yy)"
    },

    "RDSSubnetCidrB" : {
      "Type": "String",
      "Description": "Network CIDR block for second RDS subnet",
      "Default": "10.99.21.0/24",
      "AllowedPattern": "(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/([0-9]|[1-2][0-9]|3[0-2]))",
      "ConstraintDescription": "can contain only valid CIDR notation (x.x.x.x/yy)"
    },

    "Zone1AZ": {
      "Type": "AWS::EC2::AvailabilityZone::Name",
      "Description": "Availability Zone for this private subnet",
      "Default": "us-gov-west-1a"
    },

    "Zone2AZ": {
      "Type": "AWS::EC2::AvailabilityZone::Name",
      "Description": "Availability Zone for this private subnet",
      "Default": "us-gov-west-1b"
    },

    "NATGatewayInstanceType": {
      "Type": "String",
      "Description": "EC2 instance type for a NAT gateway",
      "Default": "t2.micro",
      "AllowedValues": ["t2.micro", "m4.large", "m4.xlarge", "m4.10xlarge"]

    },

    "NATGatewayInstanceAMI": {
      "Type": "AWS::EC2::Image::Id",
      "Description": "EC2 AMI image for NAT gateway",
      "Default": "ami-e8ab1489"
    },

    "DBName": {
      "Default": "bosh",
      "Description" : "The database name",
      "Type": "String",
      "MinLength": "1",
      "MaxLength": "64",
      "AllowedPattern" : "[a-zA-Z][a-zA-Z0-9_]*",
      "ConstraintDescription" : "must begin with a letter and contain only alphanumeric characters or underscore."
    },
    "DBUsername": {
      "Default": "postgres",
      "Description" : "The database admin account username",
      "Type": "String",
      "MinLength": "1",
      "MaxLength": "16",
      "AllowedPattern" : "[a-zA-Z][a-zA-Z0-9_]*",
      "ConstraintDescription" : "must begin with a letter and contain only alphanumeric characters or underscore."
    },
    "DBPassword": {
      "Default": "password",
      "NoEcho": "true",
      "Description" : "The database admin account password",
      "Type": "String",
      "MinLength": "8",
      "ConstraintDescription" : "must be at least 8 characters."
    },
    "DBClass" : {
      "Default" : "db.t2.micro",
      "Description" : "Database Instance Class",
      "Type" : "String",
      "AllowedValues" : ["db.t2.micro", "db.t2.small", "db.t2.medium", "db.t2.large db.r3.large", "db.r3.xlarge", "db.r3.2xlarge", "db.r3.4xlarge", "db.r3.8xlarge db.m4.large", "db.m4.xlarge", "db.m4.2xlarge", "db.m4.4xlarge", "db.m4.10xlarge"],
      "ConstraintDescription" : "must select a valid database instance type."
    },
    "DBSize" : {
      "Default": "5",
      "Description" : "The size of the database (in GB)",
      "Type": "Number",
      "MinValue": "5",
      "ConstraintDescription" : "must be at least 5 GB."
    },
    "S3Path" : {
      "Type": "String",
      "Description": "S3 URL path to bucket containing other CF templates"
    }

  },

  "Resources" : {
    "VPC": {
      "Type" : "AWS::CloudFormation::Stack",
      "Properties" : {
        "Parameters" : {
          "KeyName": { "Ref": "KeyName" },
          "VPCNetworkCidr": { "Ref": "VPCNetworkCidr" },
          "Zone1PublicNetworkCidr": { "Ref": "Zone1PublicNetworkCidr" },
          "Zone2PublicNetworkCidr": { "Ref": "Zone2PublicNetworkCidr" },
          "Zone1PrivateNetworkCidr": { "Ref": "Zone1PrivateNetworkCidr" },
          "Zone2PrivateNetworkCidr": { "Ref": "Zone2PrivateNetworkCidr" },
          "RDSSubnetCidrA" : { "Ref": "RDSSubnetCidrA" },
          "RDSSubnetCidrB" : { "Ref": "RDSSubnetCidrB" },
          "Zone1AZ": { "Ref": "Zone1AZ" },
          "Zone2AZ": { "Ref": "Zone2AZ" },
          "NATGatewayInstanceType": { "Ref": "NATGatewayInstanceType" },
          "NATGatewayInstanceAMI": { "Ref": "NATGatewayInstanceAMI" }
        },
        "Tags" : [ {"Key" : "Description", "Value" : { "Ref": "DescriptionTag" } } ],
        "TemplateURL": {"Fn::Join": ["/", [{ "Ref": "S3Path"}, "vpc.json"]]}
      }
    },
    "RDS": {
      "Type" : "AWS::CloudFormation::Stack",
      "Properties": {
        "Parameters" : {
          "VPC" : { "Fn::GetAtt" : [ "VPC", "Outputs.VPCID" ] },
          "DBSubnet1ID" : { "Fn::GetAtt" : [ "VPC", "Outputs.RDSSubnet1ID" ] },
          "DBSubnet2ID" : { "Fn::GetAtt" : [ "VPC", "Outputs.RDSSubnet2ID" ] },
          "ClientSecGroup" : { "Fn::GetAtt" : [ "VPC", "Outputs.VPCSecurityGroup" ] },
          "DBName": { "Ref": "DBName" },
          "DBUsername": { "Ref": "DBUsername" },
          "DBPassword": { "Ref": "DBPassword" },
          "DBClass": { "Ref": "DBClass" },
          "DBSize": { "Ref": "DBSize" }
        },
        "Tags" : [ {"Key" : "Description", "Value" : { "Ref": "DescriptionTag" } } ],
        "TemplateURL": {"Fn::Join": ["/", [{ "Ref": "S3Path"}, "rds-postgres.json"]]}
      }
    }

  },

  "Outputs" : {

  }

}